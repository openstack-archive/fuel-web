#cloud-config
resize_rootfs: false
growpart:
  mode: false
disable_ec2_metadata: true
disable_root: false

# password: RANDOM
# chpasswd: { expire: True }

ssh_pwauth: false
ssh_authorized_keys:
{% for key in common.ssh_auth_keys %}
  - {{ key }}
{% endfor %}

# set the locale to a given locale
# default: en_US.UTF-8
locale: en_US.UTF-8

timezone: {{ common.timezone }}

hostname: {{ common.hostname }}
fqdn: {{ common.fqdn }}

# NOTE(kozhukalov): if more than one name server is given then we assume
# it gonna be comma separated string "1.2.3.4,2.3.4.5"
# FROM cloudinit/cc_resolv_conf.py header
#    Note:
#    This module is intended to manage resolv.conf in environments where
#    early configuration of resolv.conf is necessary for further
#    bootstrapping and/or where configuration management such as puppet or
#    chef own dns configuration. As Debian/Ubuntu will, by default, utilize
#    resovlconf, and similarly RedHat will use sysconfig, this module is
#    likely to be of little use unless those are configured correctly.
#
#    For RedHat with sysconfig, be sure to set PEERDNS=no for all DHCP
#    enabled NICs.  And, in Ubuntu/Debian it is recommended that DNS
#    be configured via the standard /etc/network/interfaces configuration
#    file.
manage_resolv_conf: true
resolv_conf:
  nameservers: {{ common.name_servers.split(',') }}
  searchdomains:
   - {{ common.search_domain }}
  domain: {{ common.search_domain }}

# add entries to rsyslog configuration
rsyslog:
  - filename: 10-log2master.conf
    content: |
      $template LogToMaster, "<%%PRI%>1 %$NOW%T%TIMESTAMP:8:$%Z %HOSTNAME% %APP-NAME% %PROCID% %MSGID% -%msg%\n"
      *.* @{{ common.master_ip }};LogToMaster

runcmd:
{% if puppet.enable != 1 %}
 - service puppet stop
 - chkconfig puppet off
{% endif %}
{% if mcollective.enable != 1 %}
 - service mcollective stop
 - chkconfig mcollective off
{% endif %}
 - iptables -t filter -F INPUT
 - iptables -t filter -F FORWARD

# that module's missing in 0.6.3, but existent for >= 0.7.3
write_files:
 -   content: |
        ---
        url: {{ common.master_url }}
     path: /etc/nailgun-agent/config.yaml
 -   content: target
     path: /etc/nailgun_systemtype


yum_repos:
{% for reponame, repourl in common.ks_repos.items() %}
  {{ reponame }}:
    baseurl: {{ repourl }}
    enabled: true
    gpgcheck: false
{% endfor %}


mcollective:
  conf:
    main_collective: mcollective
    collectives: mcollective
    libdir: /usr/libexec/mcollective
    logfile: /var/log/mcollective.log
    loglevel: debug
    daemonize: 1
    direct_addressing: 1
    ttl: 4294957
    securityprovider: psk
    plugin.psk: {{ mcollective.pskey }}
{% if mcollective.connector == 'stomp' %}
    connector = stomp
    plugin.stomp.host: {{ mcollective.host }}
    plugin.stomp.port: {{ mcollective.port|default(61613) }}
    plugin.stomp.user: {{ mcollective.user }}
    plugin.stomp.password: {{ mcollective.password }}
{% else %}
    connector: rabbitmq
    plugin.rabbitmq.vhost: {{ mcollective.vhost }}
    plugin.rabbitmq.pool.size: 1
    plugin.rabbitmq.pool.1.host: {{ mcollective.host }}
    plugin.rabbitmq.pool.1.port: {{ mcollective.port|default(61613) }}
    plugin.rabbitmq.pool.1.user: {{ mcollective.user }}
    plugin.rabbitmq.pool.1.password: {{ mcollective.password }}
    plugin.rabbitmq.heartbeat_interval: 30
{% endif %}
    factsource: yaml
    plugin.yaml: /etc/mcollective/facts.yaml

puppet:
  conf:
    main:
      logdir: /var/log/puppet
      rundir: /var/run/puppet
      ssldir: $vardir/ssl
      pluginsync: true
    agent:
      classfile: $vardir/classes.txt
      localconfig: $vardir/localconfig
      server: {{ puppet.master }}
      report: false
      configtimeout: 600


final_message: "YAY! The system is finally up, after $UPTIME seconds"
