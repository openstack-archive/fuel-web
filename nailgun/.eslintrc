---
  root: true
  extends: openstack
  plugins:
    - react
  ecmaFeatures:
    arrowFunctions: true
    classes: true
    defaultParams: true
    destructuring: true
    jsx: true
    modules: true
    objectLiteralComputedProperties: true
    objectLiteralShorthandMethods: true
    objectLiteralShorthandProperties: true
    restParams: true
    spread: true
    superInFunctions: true
  rules:
    # openstack config overrides

    # possible errors
    no-empty: 0 # we use empty blocks with try-catch
    no-extra-parens: 0 # extra parens are preferred with JSX
    no-unexpected-multiline: 2 # extra rule
    valid-jsdoc: 0 # eslint treats multiline comments as JSDoc

    # best practices
    complexity: 0 # FIXME(vkramskikh): needs to be enabled
    consistent-return: 0 # we have lots of code where consistent return isn't needed
    curly: 0 # we're ok with if one-liners
    dot-location: [2, property] # extra rule
    eqeqeq: 0 # FIXME(vkramskikh): needs to be enabled
    no-empty-pattern: 2 # extra rule
    no-script-url: 0 # FIXME(vkramskikh): needs to be enabled
    no-useless-call: 2 # extra rule
    no-warning-comments: 0 # we're ok with FIXMEs
    radix: 0 # FIXME(vkramskikh): needs to be enabled
    yoda: 2 # extra rule

    # variables
    no-undef: 2 # extra rule
    no-undefined: 0 # we're ok with using undefined
    no-use-before-define: 2 # extra rule

    # node.js
    no-mixed-requires: 0 # FIXME(vkramskikh): needs to be enabled
    no-process-env: 0 # we use it in a few places and are ok with it
    no-sync: 0 # it affects our browser code with Sync in function names, like "onModelSync"

    # stylistic issues
    array-bracket-spacing: 2 # extra rule
    brace-style: [2, 1tbs, {allowSingleLine: true}] # overriden to set allowSingleLine to true
    comma-spacing: 2 # extra rule
    computed-property-spacing: 2 # extra rule
    id-match: [2, '^([A-Za-z\d_$]+)$', {properties: true}] # extra rule
    indent: [0, 2, {SwitchCase: 1}] # FIXME(vkramskikh): needs to be enabled
    jsx-quotes: [2, prefer-single] # extra rule
    key-spacing: 2 # extra rule
    new-cap: [2, {newIsCap: true, capIsNew: false}] # extra rule
    no-array-constructor: 2 # extra rule
    no-lonely-if: 2 # extra rule
    no-new-object: 2 # extra rule
    no-spaced-func: 2 # extra rule
    object-curly-spacing: 2 # extra rule
    one-var: [0, {uninitialized: always, initialized: never}] # FIXME(vkramskikh): needs to be enabled
    operator-linebreak: 0 # FIXME(vkramskikh): needs to be enabled
    padded-blocks: [2, never] # extra rule
    quotes: [2, single, avoid-escape] # extra rule
    space-before-function-paren: [2, never] # extra rule
    space-before-keywords: 2 # extra rule

    # legacy
    max-len: 0 # FIXME(vkramskikh): needs to be enabled


    # es6
    arrow-parens: 2
    arrow-spacing: 2
    constructor-super: 2
    #no-arrow-condition: 2
    no-class-assign: 2
    no-const-assign: 2
    no-dupe-class-members: 2
    no-this-before-super: 2
    no-var: 0
    object-shorthand: [2, methods]
    prefer-arrow-callback: 2
    prefer-const: 0
    prefer-spread: 2
    prefer-template: 0

    # react
    react/jsx-boolean-value: [2, never]
    react/jsx-closing-bracket-location: [2, {nonEmpty: false, selfClosing: line-aligned}]
    react/jsx-curly-spacing: [2, never]
    react/jsx-indent-props: [2, 4]
    react/jsx-key: 2
    react/jsx-no-duplicate-props: 2
    react/jsx-no-literals: 0
    react/jsx-no-undef: 2
    react/jsx-uses-react: 2
    react/jsx-uses-vars: 2
    react/no-unknown-property: 2
    react/prop-types: 0
    react/react-in-jsx-scope: 2
    react/self-closing-comp: 2
    react/sort-comp: 0
  env:
    browser: true
  globals:
    app: false
